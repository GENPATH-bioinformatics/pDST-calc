[project]
name = "pdst-calc"
version = "0.1.0"
description = "This tool provides a Drug Susceptibility Testing (DST) calculator with both a command-line interface (CLI) and a Shiny for Python web app."
readme = "README.md"
requires-python = ">=3.11"
authors = [
    {name = "Bea Loubser"},
    {name = "Abhinav Sharma"}
]
license = "MIT"
keywords = ["drug-susceptibility-testing", "dst", "calculator", "tuberculosis", "medical"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Healthcare Industry",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Medical Science Apps.",
]
# Core runtime dependencies only
dependencies = [
    "numpy>=2.2.6",
    "openpyxl>=3.1.5",
    "pandas>=2.3.1",
    "shiny>=1.4.0",
    "tabulate>=0.9.0",
]

[project.scripts]
pdst-calc = "app.cli.main:main"

[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["."]
include = ["lib*", "app*"]

[tool.ruff]
line-length = 120
target-version = "py311"

[tool.ruff.lint]
select = [
  "B",      # flake8-bugbear
  "BLE",    # flake8-blind-except
  "C4",     # flake8-comprehensions
  "D",      # pydocstyle
  "E",      # Error detected by Pycodestyle
  "F",      # Errors detected by Pyflakes
  "I",      # isort
  "RUF100", # Report unused noqa directives
  "TID",    # flake8-tidy-imports
  "UP",     # pyupgrade
  "W",      # Warning detected by Pycodestyle
]
ignore = [
  # Errors from function calls in argument defaults. These are fine when the result is immutable.
  "B008",
  # Missing docstring in public module
  "D100",
  # Missing docstring in public package
  "D104",
  # __magic__ methods are are often self-explanatory, allow missing docstrings
  "D105",
  # Missing docstring in __init__
  "D107",
  ## Disable one in each pair of mutually incompatible rules
  # We donâ€™t want a blank line before a class docstring
  "D203",
  # We want docstrings to start immediately after the opening triple quote
  "D213",
  # first line should end with a period [Bug: doesn't work with single-line docstrings]
  "D400",
  # First line should be in imperative mood; try rephrasing
  "D401",
  # line too long -> we accept long comment lines; black gets rid of long code lines
  "E501",
  # Do not assign a lambda expression, use a def -> lambda expression assignments are convenient
  "E731",
  # allow I, O, l as variable names -> I is the identity matrix
  "E741",
]
unfixable = [ "F841" ]


[tool.ruff.lint.per-file-ignores]
"!pdst_calc/**.py" = ["ANN", "D", "S101", "PLR2004", "T20"]

[tool.ruff.lint.isort]
required-imports = ["from __future__ import annotations"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.typos]
files.extend-exclude = ["*.ipynb"]

[tool.uv]
default-groups = ["dev", "lint", "test"]

[tool.pytest.ini_options]
addopts = "--maxfail=1"
testpaths = ["test"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "unit: Unit tests for individual functions",
    "integration: Integration tests for workflow",
    "hypothesis: Property-based tests using Hypothesis",
    "slow: Tests that take longer to run",
]


[dependency-groups]
dev = [
    "nbwipers>=0.6.1",
    "pytest>=8",
    "pytest-cov>=6.0.0",
    "pytest-watch>=4.2.0",
    "pre-commit>=4.1.0",
    "typos>=1.29.4",
    "hypothesis>=6.135.32",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "build>=1.3.0",
    "twine>=6.1.0",
    "dso-core>=0.9",
    "ipykernel>=6.29.5",
]
lint = [
    "ruff>=0.9.3",
]
test = [
    "pytest>=8",
    "pytest-cov>=6.0.0",
    "pytest-watch>=4.2.0",
    "hypothesis>=6.135.32",
]
